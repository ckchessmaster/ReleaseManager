trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - web-src/*

variables:
  vmImageName: 'ubuntu-latest'
  workingDirectory: '$(System.DefaultWorkingDirectory)/web-src'
  azureSubscription: 'azure-default'
  appName: uan-app-release-manager
  nodeVersion: '12.13'
  applicationId: 36f8390e-71e7-4a12-94ac-20d4dcbee7d0
  tenantId: 33733cf0-747e-41fc-b9c4-17823e2ef545

pool:
  vmImage: $(vmImageName)

stages:
- stage: Test
  displayName: Test
  jobs:
  # - job: Lint
  #   displayName: Lint
  #   steps:
  #   - task: NodeTool@0
  #     displayName: Set Node Version
  #     inputs:
  #       versionSpec: $(nodeVersion)

  #   - script: npm run lint
  #     displayName: Lint code
  #     workingDirectory: $(workingDirectory)

  - job: UnitTest
    displayName: UnitTest
    steps:
    - task: NodeTool@0
      displayName: Set Node Version
      inputs:
        versionSpec: $(nodeVersion)

    - script: npm install
      displayName: Install Dependencies
      workingDirectory: $(workingDirectory)

    - script: npm run test:unit
      displayName: Run Unit Tests
      workingDirectory: $(workingDirectory)

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '$(workingDirectory)/**/TEST-RESULTS.xml'

    - task: PublishCodeCoverageResults@1
      inputs: 
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(workingDirectory)/**/*coverage.xml'
        reportDirectory: '$(workingDirectory)/**/coverage'

- stage: Build
  displayName: Build
  dependsOn: Test
  condition: succeeded('Test')

  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: NodeTool@0
      displayName: Set Node Version
      inputs:
        versionSpec: $(nodeVersion)

    - script: npm install
      displayName: Install Dependencies
      workingDirectory: $(workingDirectory)

    - script: npm run build
      displayName: Build Vue App
      workingDirectory: $(workingDirectory)

    - publish: '$(workingDirectory)/dist'
      displayName: 'Upload Package'
      artifact: site

- stage: Deploy
  displayName: Deploy
  dependsOn: Build
  condition: succeeded('Build')
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: azcopy10 login --service-principal --application-id $(applicationId) --tenant-id=$(tenantId)
            displayName: Login Service Principal
            env:
              AZCOPY_SPA_CLIENT_SECRET: $(AZCOPY_SPA_CLIENT_SECRET)
          - script: 'azcopy10 cp "$(Pipeline.Workspace)/site" "https://uansagamerelease.blob.core.windows.net/$web" --recursive'
            displayName: Publish to Azure Blob Storage